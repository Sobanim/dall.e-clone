import React, {FC, useState} from 'react';
import {preview} from "../assets"
import {getRandomPrompt} from '../utils'
import {FormField, Loader} from '../components'
import {useNavigate} from "react-router-dom";

const CreatePost: FC = () => {
    const navigate = useNavigate()
    const [form, setForm] = useState({
        name: '',
        prompt: '',
        photo: ''
    })
    const [generatingImg, setGeneratingImg] = useState<boolean>(false)
    const [loading, setLoading] = useState<boolean>(false)

    const generateImage = async () => {
        if (form.prompt) {
            try {
                setGeneratingImg(true)
                const response = await fetch("http://localhost:3001/api/v1/dalle", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({prompt: form.prompt})
                })

                const data = await response.json()

                setForm({...form, photo: `data:image/jpeg;base64,${data.photo}`})
            } catch (error) {
                alert(error)
                console.error(error)
            } finally {
                setGeneratingImg(false)
            }
        } else {
            alert('Enter prompt')
        }
    }

    const handleSubmit = async (e) => {
        e.preventDefault()

        if (form.prompt && form.photo) {
            setLoading(true)
            try {
                const response = await fetch('http://localhost:3001/api/v1/post', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(form)
                })

                await response.json()
                navigate('/')
            } catch (err) {
                alert(err)
            } finally {
                setLoading(false)
            }
        } else {
            alert('Please enter prompt and generate image')
        }
    }

    const handleChange = (e) => {
        setForm({...form, [e.target.name]: e.target.value})
    }

    const handleSupriseMe = () => {
        const randomPrompt = getRandomPrompt(form.prompt)
        setForm({...form, prompt: randomPrompt})
    }

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px]'>Create</h1>
                <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
                    Create imaginative and visually stunning images generated by DALL-e aI
                </p>
            </div>

            <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
                <div className='flex flex-col gap-5'>
                    <FormField
                        labelName='Your Name'
                        type='text'
                        name='name'
                        placeholder='John Doe'
                        value={form.name}
                        handleChange={handleChange}
                    />

                    <FormField
                        labelName='Prompt'
                        type='text'
                        name='prompt'
                        value={form.prompt}
                        placeholder='A photo of a Samoyed dog with its tongue out hugging a white Siamese cat'
                        handleChange={handleChange}
                        isSurpriseMe
                        handleSurpriseMe={handleSupriseMe}
                    />
                    <div className='relative bg-green-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center'>
                        {form.photo ? (<img src={form.photo} alt={form.prompt} className='w-full h-full object-contain' />)
                            : (<img src={preview} alt={preview} className='w-9/12 h-9/12 object-contain opacity-40' />)}

                        {generatingImg && (
                            <div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg'>
                                <Loader />
                            </div>
                        )}
                    </div>
                </div>
                <div className='mt-5 flex gap-5'>
                    <button
                        className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'
                        type='button'
                        onClick={generateImage}

                    >
                        {generatingImg ? 'Generating...' : 'Generate'}
                    </button>
                </div>
                <div className='mt-10'>
                    <p className='mt-2 text-[#666e75] text-[14px]'>Once you have created the image you want, you can share it with  the community</p>
                    <button
                        className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto  px-5 py-2.5 text-center'
                        type={'submit'}
                    >
                        {loading ? 'Sharing...' : 'Share with Community'}
                    </button>
                </div>
            </form>
        </section>
    );
};

export default CreatePost;